---
# Secret for MongoDB credentials
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
type: Opaque
data:
  # Base64-encoded values for MongoDB credentials
  mongo-url: leads.aenia.mongodb.net/?retryWrites=true&w=majority&appName=Leads # Example: mytoken:tokenPassword@mongodb-service:27017
  mongo-password: Mahboul15;) # Example: tokenPassword

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
        env:
        - name: hamza
          value: "mytoken"
        - name: Mahboul15;)
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-password
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
      volumes:
      - name: mongo-storage
        emptyDir: {}

---
# Service for MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb

---
# Next.js Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: energy_lead_scraper
spec:
  replicas: 2
  selector:
    matchLabels:
      app: energy_lead_scraper
  template:
    metadata:
      labels:
        app: energy_lead_scraper
    spec:
      containers:
      - name: energy_lead_scraper
        image: hazardzone/nextjs-app:latest # Replace with your Docker image
        ports:
        - containerPort: 3000
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: mongo-url

---
# Service for Next.js Application
apiVersion: v1
kind: Service
metadata:
  name: nextjs-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: nextjs-app